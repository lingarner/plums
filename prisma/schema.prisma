datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Topic {
  id          Int           @id @default(autoincrement())
  name        String
  pinned      Boolean       @default(false)
  urls        Url[]
  attachments Attachment[]
  notebook    NotebookEntry[]
  parentId    Int?          @map("parent_id")
  parent      Topic?        @relation("TopicToTopic", fields: [parentId], references: [id], onDelete: SetNull)
  userId      String?
  subtopics   Topic[]       @relation("TopicToTopic")
  tags        TagsOnTopic[]
}

model Tag {
  id     Int           @id @default(autoincrement())
  name   String        
  userId String?
  topics TagsOnTopic[]
}

model TagsOnTopic {
  userId  String?
  topic   Topic @relation(fields: [topicId], references: [id])
  topicId Int
  tag     Tag   @relation(fields: [tagId], references: [id])
  tagId   Int

  @@id([tagId, topicId])
}

model Attachment {
  id             Int      @id @default(autoincrement())
  name           String
  createdAt      DateTime @default(now())
  comments       String?
  pinned         Boolean
  attachmentData Bytes
  attachmentType String
  topic          Topic    @relation(fields: [topicId], references: [id])
  topicId        Int
}

model Url {
  id        Int      @id @default(autoincrement())
  name      String
  url       String?
  createdAt DateTime @default(now())
  comments  String?
  pinned    Boolean
  topic     Topic    @relation(fields: [topicId], references: [id])
  topicId   Int
}

model NotebookEntry {
  id         Int      @id @default(autoincrement())
  title      String
  content    String?
  pinned     Boolean  @default(false)
  topic      Topic  @relation(fields: [topicId], references: [id])
  topicId    Int
}
